import os
import json
import boto3
import random

from flask import Flask, jsonify, request

application = Flask(__name__)

cities = ['Angkor Wat',
 'Great Barrier Reef',
 'Machu Picchu',
 'Great Wall of China',
 'Taj Mahal',
 'Grand Canyon',
 'Colosseum',
 'Iguazu Falls',
 'Alhambra',
 'Aya Sofya (Hagia Sophia)',
 'Medina of Fez',
 'Twelve Apostles',
 'Petra',
 'Tikal National Park',
 'British Museum',
 'Sagrada Familia',
 'Fiordland National Park',
 'Santorini',
 'Galapagos Islands',
 'Museum of Old and New Art',
 'Yosemite',
 'Dubrovnik',
 'Salar De Uyuni',
 'Bagan',
 'The Pyramids of Giza',
 'Piazza San Marco',
 'Victoria Falls',
 'Acropolis of Athens',
 'Versailles',
 'Marrakesh',
 "Hanoi's Old Quarter",
 'Cradle Mountain',
 'Uluru',
 'Charles Bridge',
 'Abel Tasman National Park',
 'Lake District',
 'Louvre Museum',
 'Torres Del Paine National Park',
 'Lake Baikal',
 'Eiffel Tower',
 'Pompeii',
 'Havana',
 'Table Mountain',
 'Old Town Square Prague',
 'Serengeti National Park',
 'Hermitage Museum',
 'Bay of Kotor',
 'Jaisalmer Rajasthan',
 'Ngorongoro Crater Conservation Area',
 'Hiroshima',
 'Pantheon',
 'Tate Modern',
 'Naqsh-E Jahan',
 'Tiger Leaping Gorge',
 'Notre Dame',
 'Kakadu National Park',
 'Sydney Opera House',
 'Edinburgh Castle',
 'Anne Frank House',
 'Jökulsarlon',
 'Yellowstone National Park',
 'Stonehenge',
 'Berlin Wall',
 'Isle of Skye',
 'Halong Bay',
 'Santa Maria Del Fiore (Duomo Di Firenze / Florence Cathedral)',
 'Cappadocia',
 'Koh Tao',
 'Palenque',
 'Ilulissat Kangerlua',
 'Sinai',
 'Pao De Acucar',
 'Mezquita of Cordoba',
 'Lalibela',
 'Arashiyama',
 'Lake Bled',
 'Redwood National Park',
 'Chichen Itza',
 'Masai Mara',
 'Metropolitan Museum of Art',
 'Franz Josef Glacier',
 'Valley of the Kings',
 'Hoi An',
 'Monument Valley',
 "St. Peter's Basilica",
 'Dome of the Rock',
 'Red Square',
 'Forbidden City',
 'Uffizi Gallery',
 'Everest Base Camp Trek',
 'Shwedagon Pagoda',
 'Teotihuacan',
 'Blue Lagoon',
 'Lake Wanaka',
 'Abu Simbel',
 'Le Cimetière de Père Lachaise',
 'Big Sur',
 'Matterhorn',
 'Gamla Stan',
 'Okavango Delta',
 'Golden Gate Bridge',
 'Dashashwamedh Ghat',
 "Giant's Causeway",
 'Auschwitz Memorial / Muzeum Auschwitz',
 'Parque Nacional Corcovado',
 'Niagara Falls',
 'Potala Palace Lhasa',
 'Bora Bora',
 'Empire State Building',
 'Budapest',
 'Topkapi Palace',
 'Historic Centre (Old Town) of Tallinn',
 'Stari Most Bridge',
 'Ayuthaya',
 'Vatican Museum',
 'Anakena Beach',
 'The Peak',
 "St. Paul's Cathedral",
 'Meteora',
 'Temple and Cemetery of Confucius and the Kong Family Mansion in Qufu',
 'Copper Canyon',
 'Monte Fitz Roy El Chalten',
 'Aiguille Du Midi',
 'Bryggen',
 'Stewart Island',
 'Bhaktapur Durbar Square',
 'Bazaruto Archipelago',
 'Andaz Amsterdam Prinsengracht',
 'Plitvice Lakes National Park',
 'Bay of Islands - New Zealand',
 'Pantanal',
 'Great Buddha',
 'Museum of Anthropology Vancouver BC',
 'Skara Brae',
 'West Norwegian Fjords – Geirangerfjord and Nærøyfjord',
 'Tayrona National Park',
 'Choquequirao',
 'Ephesus',
 'Kruger National Park',
 'Tulum',
 'Tsukiji Fish Market',
 'Sintra',
 'Carcassonne',
 'Statue of Liberty',
 'Vatnajokulll Glacier Cave',
 'Blue Mosque',
 'Gion District',
 'Leshan Grand Buddha',
 'Cave of Altamira and Paleolithic Cave Art of Northern Spain',
 'Haida Gwaii British Columbia',
 'Bairro of Ribeira',
 'Koya-San',
 'Mt. Etna',
 'Eiger',
 'Walt Disney World',
 'Chernobyl Exclusion Zone',
 'Shibuya Crossing',
 'Valle De Vinales',
 'Schloss Neuschwanstein',
 'Terracotta Warriors',
 "Shackleton's Hut",
 'Icehotel Jukkasjärvi',
 'Hike From Moraine Lake Through Paradise Valley',
 'Roman Baths (Bath)',
 'Chobe National Park',
 'Inle Lake',
 'Kota Kinabalu',
 'Phong Nha-Ke Bang National Park',
 'Edinburgh Royal Mile',
 'Cristo Redentor',
 'National Mall',
 'Prague Castle',
 'Accra',
 'La Grand-Place Brussels',
 'Kinkaku-Ji',
 'Gullfoss Waterfall',
 'The Rocky Mountains',
 'Egyptian Museum',
 'Gorges Du Verdon',
 'Amber Fort',
 'Snowdonia',
 'Volcanoes National Park',
 'Xochimilco',
 'Glencoe',
 'Mont Blanc',
 'Karnak Temple Luxor',
 'Gardens by the Bay',
 'iSimangaliso Wetland Park',
 'York Minster',
 'Van Gogh Museum',
 'Sigiriya',
 'Madurai Meenakshi Amman Temple',
 'Old Tbilisi',
 'Changdeokgung Palace Complex',
 'DMZ',
 'Boudhanath Stupa Kathmandu',
 'Rynek Glowny Krakow',
 'Mogao Caves',
 'Vat Phou and Associated Ancient Settlements Within the Champasak Cultu',
 'Goree Island',
 'Mont St Michel',
 'Blue Mountains',
 'Island of Mozambique',
 'Grand Erg Occidental Desert',
 'San Gimignano',
 'Vasamuseet / the Vasa Museum',
 'Portmeirion',
 'Times Square',
 'Bacuit Archipelago',
 'Robben Island',
 'Borgarfjörður Eystri',
 'Sossusvlei',
 'Wieliczka Salt Mine',
 'Parque Nacional Nahuel Huapi',
 'Jellyfish Lake Eil Malk',
 'Vigelandspark',
 'Summer Palace and Imperial Garden',
 'Old Quebec/Vieux Québec',
 'Canterbury Cathedral',
 'Carthage',
 'Reichstag Building',
 'Group of Monuments at Hampi',
 'Malecon De Riohacha',
 'Brú Na Bóinne Neolithic Site',
 'Museo Del Prado',
 'Lago Atitlan',
 'Gunung Leuser National Park',
 'Alcatraz',
 'Piazza Del Campo',
 'Postojna Cave',
 'Rila Monastery',
 'The Bund',
 'Rijksmuseum',
 'Pont Du Gard',
 'Alcazar Seville',
 'Singapore Zoo',
 'Wadi Rum Protected Area',
 'Temple of Luxor',
 'Natural History Museum D.C.',
 'Old Delhi',
 'Cinque Terre',
 'Borobudur',
 'Bosque Nuboso Monteverde',
 'Parque Nacional Manuel Antonio',
 'Duomo Milan',
 'Burj Khalifa',
 'Djenne',
 'Naoshima',
 'Tajik National Park (Mountains of the Pamirs)',
 'Silfra Þingvellir']


@application.route('/recommend', methods=["GET"])
def recommend():
    session = boto3.Session(
              aws_access_key_id='',
              aws_secret_access_key='',
              region_name='us-west-1'
              )
    dynamodb = session.resource('dynamodb')
    table = dynamodb.Table('travel_recommendation')

    search_key = random.choice(cities)

    try:
        r = table.get_item(Key={'name': search_key})['Item']
    except Exception:
        r = {'name': 'Invalid Key', 'location': 'thisisnotavalidlocation.'}
    return json.dumps(r, sort_keys = True, indent = 4, separators = (',', ': '))

if __name__ == "__main__":
    application.run(debug=True)
